# Copyright (c) 2022 Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
# 

# Creates and Publishes the Oracle Resource Manager stack - v0.0.5

name: Generate stacks and publish release

on:
  push:
    branches: [ main ]
    paths: ['VERSION']

jobs:

  publish_stack:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create stacks
      id: create_stacks
      run: |
        set -euo pipefail
        RELEASE=$(cat VERSION)
        # temporarily hardcode solution versions
        AI_HUB_SOLUTION_VERSION=1.0
        
        # oci-ods-aqua
        STACKNAME=oci-ods-aqua
        STACK_FILES="ai-quick-actions/policies/terraform/*"
        echo "::group::Processing $STACKNAME"
        zip -r ${STACKNAME}-stack.zip $STACK_FILES
        cp ${STACKNAME}-stack.zip ${STACKNAME}.zip
        echo "::endgroup::"
        
        # ai-document-converter-app
        DOC_CONVERTER_STACKNAME=ai-document-converter
        DOC_CONVERTER_FILES="ai-hub/ai-document-converter/policies/terraform/*"
        echo "::group::Packaging $DOC_CONVERTER_STACKNAME"
        zip -r ${DOC_CONVERTER_STACKNAME}-stack.zip $DOC_CONVERTER_FILES
        cp ${DOC_CONVERTER_STACKNAME}-stack.zip ${DOC_CONVERTER_STACKNAME}.zip
        echo "::endgroup::"
        
        # ai-translation-app
        TRANSLATION_STACKNAME=ai-translation
        TRANSLATION_FILES="ai-hub/ai-translation/policies/terraform/*"
        echo "::group::Packaging $TRANSLATION_STACKNAME"
        zip -r ${TRANSLATION_STACKNAME}-stack.zip $TRANSLATION_FILES
        cp ${TRANSLATION_STACKNAME}-stack.zip ${TRANSLATION_STACKNAME}.zip
        echo "::endgroup::"
        
        ASSETS="${STACKNAME}.zip ${DOC_CONVERTER_STACKNAME}.zip ${TRANSLATION_STACKNAME}.zip"
        
        {
          echo "assets=${ASSETS}"
          echo "release=${RELEASE}"
          echo "aqua=${STACKNAME}"
          echo "ai_document_converter=${DOC_CONVERTER_STACKNAME}"
          echo "ai_translation=${TRANSLATION_STACKNAME}"
          echo "ai_hub_solution_version=${AI_HUB_SOLUTION_VERSION}"
        } >> $GITHUB_OUTPUT

    - name: Prepare Release Notes
      shell: bash
      run: |
        rel="${{ steps.create_stacks.outputs.release }}"
        aqua="${{ steps.create_stacks.outputs.aqua }}"
        ai_document_converter="${{ steps.create_stacks.outputs.ai_document_converter }}"
        ai_translation="${{ steps.create_stacks.outputs.ai_translation }}"
        ai_hub_solution_version="${{ steps.create_stacks.outputs.ai_hub_solution_version }}"
        
        {
          printf '# Stacks - v%s\n\n' "$rel"
          printf '### %s\n' "$aqua"
          printf '## [![Deploy to Oracle Cloud][magic_button]][magic_stack_aqua]\n\n'
        
          printf '### %s\n' "$ai_document_converter"
          printf '## [![Deploy to Oracle Cloud][magic_button]][magic_stack_ai_document_converter]\n\n'

          printf '### %s\n' "$ai_translation"
          printf '## [![Deploy to Oracle Cloud][magic_button]][magic_stack_ai_translation]\n\n'

          printf '[magic_button]: https://oci-resourcemanager-plugin.plugins.oci.oraclecloud.com/latest/deploy-to-oracle-cloud.svg\n'
          printf '[magic_stack_aqua]: https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/download/%s/%s.zip\n' "$rel" "$aqua"
          printf '[magic_stack_ai_document_converter]: https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/download/%s/%s.zip\n' "$ai_hub_solution_version" "$ai_document_converter"
          printf '[magic_stack_ai_translation]: https://cloud.oracle.com/resourcemanager/stacks/create?zipUrl=https://github.com/${{ github.repository }}/releases/download/%s/%s.zip\n' "$ai_hub_solution_version" "$ai_translation"
        } > release.md

    - name: Create Release
      run: gh release create ${{ steps.create_stacks.outputs.release }} --generate-notes -F release.md ${{ steps.create_stacks.outputs.assets }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
